I".9<h1 id="introduction">Introduction</h1>

<!--more-->

<h2 id="21-module">2.1 Module</h2>

<p>반도체 전체 회로도를 한번 생각해 보면 아래와 같이 적게는 수천개 많게는 수백억개 까지의 논리회로로 구성되어 있을 것입니다.</p>

<p>4bit adder와 4bit mux로 구성된 매우 간단한 회로를 생각해봅시다.</p>

<p><img src="/Users/parkdongho/Documents/공부/시스템_반도체_설계_스터디/3주차/img/fig_2_4.png" alt="mux" style="zoom:50%;" /></p>

<p>단순한 기능을 하는 회로임에도 매우 복잡하죠….</p>

<p>따라서 아래 그림과 같이 회로를 작은 부분부분으로 쪼개서 설계할 필요가 있습니다.</p>

<p><img src="/Users/parkdongho/Documents/공부/시스템_반도체_설계_스터디/3주차/img/fig_2_5.png" alt="mux" style="zoom:50%;" /></p>

<p>이렇게 회로를 분해한 기본 단위를 module 이라고 합니다.</p>

<p>verilog에서 module은 아래와 같이 기술 합니다.</p>

<div class="language-verilog highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">module</span> <span class="err">모듈명</span><span class="p">(</span>
  <span class="kt">input</span> <span class="err">입력</span><span class="mi">_</span><span class="err">포트</span><span class="mi">_</span><span class="err">명</span><span class="p">,</span> <span class="c1">//1bit input</span>
  <span class="kt">input</span> <span class="err">입력</span><span class="mi">_</span><span class="err">포트</span><span class="mi">_</span><span class="err">명</span><span class="p">,</span> <span class="c1">//1bit input</span>
  <span class="kt">input</span> <span class="err">입력</span><span class="mi">_</span><span class="err">포트</span><span class="mi">_</span><span class="err">명</span><span class="p">,</span> <span class="c1">//1bit input</span>
  
  <span class="kt">output</span> <span class="err">출력</span><span class="mi">_</span><span class="err">포트</span><span class="mi">_</span><span class="err">명</span> <span class="c1">//1bit output</span>
<span class="p">);</span>
  
  <span class="c1">//여기에 내부 로직 기술</span>
  
<span class="k">endmodule</span>
</code></pre></div></div>

<p>아래는 2 to 1 mux의 module 예시 입니다.</p>

<p><img src="/Users/parkdongho/Documents/공부/시스템_반도체_설계_스터디/3주차/img/fig_2_6.png" alt="mux" style="zoom:50%;" /></p>

<p>2 to 1 mux는 데이터 입력이 2포트(A, B), 데이터 선택 포트(S), 출력이 1포트(Z)를 가집니다.</p>

<p><strong>Example 2.1</strong></p>

<div class="language-verilog highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">module</span> <span class="n">ex_2_01_mux_2_to_1</span><span class="p">(</span>
  <span class="kt">input</span> <span class="n">A</span><span class="p">,</span> <span class="c1">//1bit input</span>
  <span class="kt">input</span> <span class="n">B</span><span class="p">,</span> <span class="c1">//1bit input</span>
  <span class="kt">input</span> <span class="n">S</span><span class="p">,</span> <span class="c1">//1bit input</span>
  
  <span class="kt">output</span> <span class="n">Z</span> <span class="c1">//1bit output</span>
<span class="p">);</span>
  
  <span class="c1">//여기에 내부 로직 기술</span>
  
<span class="k">endmodule</span>
</code></pre></div></div>

<p>모듈명은 : ex_2_01_mux_2_to_1</p>

<p>입력포트는 : A, B, S</p>

<p>출력 포트는 : Z</p>

<p>입니다.</p>

<p>베릴로그에서 포트를 선언할 때 데이터 타입을 생략할 수 있습니다. 만약 데이터 타입을 생략 한다면 wire 타입을 가집니다. 하지만 설계를 명확하게 하기 위해 아래와 같이 wire 타입 임에도 타입을 선언 하는 것을 권장합니다.</p>

<div class="language-verilog highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">module</span> <span class="err">모듈명</span><span class="p">(</span>
  <span class="kt">input</span> <span class="err">변수</span><span class="mi">_</span><span class="err">타입</span> <span class="err">입력</span><span class="mi">_</span><span class="err">포트</span><span class="mi">_</span><span class="err">명</span><span class="p">,</span> <span class="c1">//1bit input</span>
  <span class="kt">input</span> <span class="err">변수</span><span class="mi">_</span><span class="err">타입</span> <span class="err">입력</span><span class="mi">_</span><span class="err">포트</span><span class="mi">_</span><span class="err">명</span><span class="p">,</span> <span class="c1">//1bit input</span>
  <span class="kt">input</span> <span class="err">변수</span><span class="mi">_</span><span class="err">타입</span> <span class="err">입력</span><span class="mi">_</span><span class="err">포트</span><span class="mi">_</span><span class="err">명</span><span class="p">,</span> <span class="c1">//1bit input</span>
  
  <span class="kt">output</span> <span class="err">변수</span><span class="mi">_</span><span class="err">타입</span> <span class="err">출력</span><span class="mi">_</span><span class="err">포트</span><span class="mi">_</span><span class="err">명</span> <span class="c1">//1bit output</span>
<span class="p">);</span>
  
  <span class="c1">//여기에 내부 로직 기술</span>
  
<span class="k">endmodule</span>
</code></pre></div></div>

<p><strong>Example 2.2</strong></p>

<div class="language-verilog highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">module</span> <span class="n">ex_2_02_mux_2_to_1</span><span class="p">(</span>
  <span class="kt">input</span> <span class="kt">wire</span> <span class="n">A</span><span class="p">,</span> <span class="c1">//1bit input</span>
  <span class="kt">input</span> <span class="kt">wire</span> <span class="n">B</span><span class="p">,</span> <span class="c1">//1bit input</span>
  <span class="kt">input</span> <span class="kt">wire</span> <span class="n">S</span><span class="p">,</span> <span class="c1">//1bit input</span>
  
  <span class="kt">output</span> <span class="kt">reg</span> <span class="n">Z</span> <span class="c1">//1bit output</span>
<span class="p">);</span>
  
  <span class="c1">//여기에 내부 로직 기술</span>
  
<span class="k">endmodule</span>
</code></pre></div></div>

<p>아래 그림과 같이 n-bit의 입출력을 갖는 회로도 존재합니다.</p>

<p>n-bit의 포트는 아래와 같이 기술 할 수 있습니다.</p>

<p><img src="/Users/parkdongho/Documents/공부/시스템_반도체_설계_스터디/3주차/img/fig_2_7.png" alt="mux" /></p>

<div class="language-verilog highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">module</span> <span class="err">모듈명</span><span class="p">(</span>
  <span class="kt">input</span> <span class="err">변수</span><span class="mi">_</span><span class="err">타입</span> <span class="p">[</span><span class="n">MSB</span><span class="o">:</span><span class="n">LSB</span><span class="p">]</span> <span class="err">입력</span><span class="mi">_</span><span class="err">포트</span><span class="mi">_</span><span class="err">명</span><span class="p">,</span> <span class="c1">//nbit input</span>
  <span class="kt">input</span> <span class="err">변수</span><span class="mi">_</span><span class="err">타입</span> <span class="p">[</span><span class="n">MSB</span><span class="o">:</span><span class="n">LSB</span><span class="p">]</span> <span class="err">입력</span><span class="mi">_</span><span class="err">포트</span><span class="mi">_</span><span class="err">명</span><span class="p">,</span> <span class="c1">//n-bit input</span>
  <span class="kt">input</span> <span class="err">변수</span><span class="mi">_</span><span class="err">타입</span> <span class="p">[</span><span class="n">MSB</span><span class="o">:</span><span class="n">LSB</span><span class="p">]</span> <span class="err">입력</span><span class="mi">_</span><span class="err">포트</span><span class="mi">_</span><span class="err">명</span><span class="p">,</span> <span class="c1">//n-bit input</span>
  
  <span class="kt">output</span> <span class="err">변수</span><span class="mi">_</span><span class="err">타입</span> <span class="p">[</span><span class="n">MSB</span><span class="o">:</span><span class="n">LSB</span><span class="p">]</span> <span class="err">출력</span><span class="mi">_</span><span class="err">포트</span><span class="mi">_</span><span class="err">명</span> <span class="c1">//n-bit output</span>
<span class="p">);</span>
  
  <span class="c1">//여기에 내부 로직 기술</span>
  
<span class="k">endmodule</span>
</code></pre></div></div>

<p><strong>Example 2.3</strong></p>

<div class="language-verilog highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">module</span> <span class="n">ex_2_03_mux_2_to_1</span><span class="p">(</span>
  <span class="kt">input</span> <span class="kt">wire</span>  <span class="p">[</span><span class="mi">3</span><span class="o">:</span><span class="mi">0</span><span class="p">]</span> <span class="n">A</span><span class="p">,</span> <span class="c1">//4bit input</span>
  <span class="kt">input</span> <span class="kt">wire</span>  <span class="p">[</span><span class="mi">3</span><span class="o">:</span><span class="mi">0</span><span class="p">]</span> <span class="n">B</span><span class="p">,</span> <span class="c1">//4bit input</span>
  <span class="kt">input</span> <span class="kt">wire</span>        <span class="n">S</span><span class="p">,</span> <span class="c1">//1bit input</span>
  
  <span class="kt">output</span> <span class="kt">reg</span> <span class="p">[</span><span class="mi">3</span><span class="o">:</span><span class="mi">0</span><span class="p">]</span> <span class="n">Z</span> <span class="c1">//4bit output</span>
<span class="p">);</span>
  
  <span class="c1">//여기에 내부 로직 기술</span>
  
<span class="k">endmodule</span>
</code></pre></div></div>

<p>이때 bitwidth를 parameter를 통하여 [WIDTH-1:0]와 같은 형태로 flexible하게 기술하는 것을 권장합니다.</p>

<div class="language-verilog highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">module</span> <span class="err">모듈명</span><span class="p">#(</span>
  <span class="k">parameter</span> <span class="n">WIDTH</span> <span class="o">=</span> <span class="mi">4</span> <span class="c1">//bitwidth가 4bit </span>
<span class="p">)(</span>
  <span class="kt">input</span> <span class="err">변수</span><span class="mi">_</span><span class="err">타입</span> <span class="p">[</span><span class="n">WIDTH</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">]</span> <span class="err">입력</span><span class="mi">_</span><span class="err">포트</span><span class="mi">_</span><span class="err">명</span><span class="p">,</span> <span class="c1">//1bit input</span>
  <span class="kt">input</span> <span class="err">변수</span><span class="mi">_</span><span class="err">타입</span> <span class="p">[</span><span class="n">WIDTH</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">]</span> <span class="err">입력</span><span class="mi">_</span><span class="err">포트</span><span class="mi">_</span><span class="err">명</span><span class="p">,</span> <span class="c1">//1bit input</span>
  <span class="kt">input</span> <span class="err">변수</span><span class="mi">_</span><span class="err">타입</span> <span class="p">[</span><span class="n">WIDTH</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">]</span> <span class="err">입력</span><span class="mi">_</span><span class="err">포트</span><span class="mi">_</span><span class="err">명</span><span class="p">,</span> <span class="c1">//1bit input</span>
  
  <span class="kt">output</span> <span class="err">변수</span><span class="mi">_</span><span class="err">타입</span> <span class="p">[</span><span class="n">WIDTH</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">]</span> <span class="err">출력</span><span class="mi">_</span><span class="err">포트</span><span class="mi">_</span><span class="err">명</span> <span class="c1">//1bit output</span>
<span class="p">);</span>
  
  <span class="c1">//여기에 내부 로직 기술</span>
  
<span class="k">endmodule</span>
</code></pre></div></div>

<p><strong>Example 2.4</strong></p>

<div class="language-verilog highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">module</span> <span class="n">ex_2_04_mux_2_to_1</span> <span class="p">#(</span>
  <span class="k">parameter</span> <span class="n">WIDTH</span> <span class="o">=</span> <span class="mi">4</span>  
<span class="p">)(</span>
  <span class="kt">input</span> <span class="kt">wire</span>  <span class="p">[</span><span class="n">WIDTH</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">]</span> <span class="n">A</span><span class="p">,</span> <span class="c1">//4bit input</span>
  <span class="kt">input</span> <span class="kt">wire</span>  <span class="p">[</span><span class="n">WIDTH</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">]</span> <span class="n">B</span><span class="p">,</span> <span class="c1">//4bit input</span>
  <span class="kt">input</span> <span class="kt">wire</span>              <span class="n">S</span><span class="p">,</span> <span class="c1">//1bit input</span>
  
  <span class="kt">output</span> <span class="kt">reg</span> <span class="p">[</span><span class="n">WIDTH</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">]</span> <span class="n">Z</span> <span class="c1">//4bit output</span>
<span class="p">);</span>
  
  <span class="c1">//여기에 내부 로직 기술</span>
  
<span class="k">endmodule</span>
</code></pre></div></div>

:ET